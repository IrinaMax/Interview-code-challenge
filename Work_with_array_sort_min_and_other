# This script was created to show how to sort array in R usinf built in functions and without it
x <- c(-3.5, 5, -6.2,11, 0,7,-9.5,2,-1,3,2.5)
sort(x) 
# of course we can use sort function, but can we do without it??:) yes we can!
rank(x)  ## pokajet only poradok rassortirovannogo array
oo <-order(x)
x[oo]
x[order(x)]
plot(x,rank(x)/length(x))
plot(x,rank(x)/length(x), type = 'S')
plot(x[oo], rank(x[oo])/length(x))
plot(x[oo], rank(x[oo])/length(x), type = 'l' )
plot(x[oo], (1:length(x)/length(x)))

##  function to finding min value in array in R
y <- runif(125)
y

min.M <- function(x) {
  minX <- x[1] ## set target to first element of `x`
  for (i in (seq_along(x[-1]) + 1)) { ## i take values 2, 3, ..., length(x)
    if(x[i] < minX) ## do comparison with current target
      p <- x[i]  ## if element i is smaller than target, update target
  }
  print(p)
}
min.M(y)

# sortting array
# Selection sort algorithm:
# 1. Find the smallest value in the array and move it to a result array.
# 2. If there is more than 1 value remaining, repeat the above step on the rest.
# 3. The sorted result is smallest, rest.
#
selectionSort <- function(arr) {
  # Find the smallest value in the list (ok sort of cheating, because we're using the highliy optimized min() function).
  smallest <- min(arr)
  rest <- arr[arr != smallest]

  if (length(rest) > 1) {
    rest <- selectionSort(arr[arr != smallest])
  }

  c(smallest, rest)
}
selectionSort(x)

# Simple implementation of Selection Sort and Quicksort in R.
# Quick sort algorithm:
# 1. Select a random value from the array.
# 2. Put all values less than the random in arrayLeft.
# 3. Put all values greater than the random in arrayRight.
# 4. If arrayLeft or arrayRight has more than 1 value, repeat the above steps on it.
# 5. The sorted result is arrayLeft, random, arrayRight.
#
quickSort <- function(arr) {
  # Pick a number at random.
  mid <- sample(arr, 1)

  # Place-holders for left and right values.
  left <- c()
  right <- c()

  # Move all the smaller values to the left, bigger values to the right.
  lapply(arr[arr != mid], function(d) {
    if (d < mid) {
      left <<- c(left, d)
    }
    else {
      right <<- c(right, d)
    }
  })

  if (length(left) > 1) {
    left <- quickSort(left)
  }

  if (length(right) > 1) {
    right <- quickSort(right)
  }

  # Finally, return the sorted values.
  c(left, mid, right)
}

quickSort(x)

##
c <- round(100*runif(100))
c
quickSort(c)
